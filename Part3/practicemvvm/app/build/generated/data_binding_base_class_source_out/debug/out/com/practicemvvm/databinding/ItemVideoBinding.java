// Generated by data binding compiler. Do not edit!
package com.practicemvvm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.practicemvvm.R;
import com.practicemvvm.list.ItemHandler;
import com.practicemvvm.model.VideoItem;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemVideoBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatTextView authorTextView;

  @NonNull
  public final AppCompatTextView dateTextView;

  @NonNull
  public final AppCompatImageView favoriteImageView;

  @NonNull
  public final AppCompatTextView playTimeTextView;

  @NonNull
  public final AppCompatImageView thumbnailImageView;

  @NonNull
  public final AppCompatTextView titleTextView;

  @Bindable
  protected VideoItem mItem;

  @Bindable
  protected ItemHandler mHandler;

  protected ItemVideoBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatTextView authorTextView, AppCompatTextView dateTextView,
      AppCompatImageView favoriteImageView, AppCompatTextView playTimeTextView,
      AppCompatImageView thumbnailImageView, AppCompatTextView titleTextView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.authorTextView = authorTextView;
    this.dateTextView = dateTextView;
    this.favoriteImageView = favoriteImageView;
    this.playTimeTextView = playTimeTextView;
    this.thumbnailImageView = thumbnailImageView;
    this.titleTextView = titleTextView;
  }

  public abstract void setItem(@Nullable VideoItem item);

  @Nullable
  public VideoItem getItem() {
    return mItem;
  }

  public abstract void setHandler(@Nullable ItemHandler handler);

  @Nullable
  public ItemHandler getHandler() {
    return mHandler;
  }

  @NonNull
  public static ItemVideoBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_video, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemVideoBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemVideoBinding>inflateInternal(inflater, R.layout.item_video, root, attachToRoot, component);
  }

  @NonNull
  public static ItemVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_video, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemVideoBinding>inflateInternal(inflater, R.layout.item_video, null, false, component);
  }

  public static ItemVideoBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemVideoBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemVideoBinding)bind(component, view, R.layout.item_video);
  }
}
