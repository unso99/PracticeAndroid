// Generated by data binding compiler. Do not edit!
package com.example.fastcampus.part3.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.fastcampus.part3.myapplication.R;
import com.example.fastcampus.part3.myapplication.mvvm.MvvmActivity;
import com.example.fastcampus.part3.myapplication.mvvm.MvvmViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityMvvmBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatTextView imageCountTextView;

  @NonNull
  public final AppCompatImageView imageView;

  @NonNull
  public final Button loadButton;

  @Bindable
  protected MvvmActivity mView;

  @Bindable
  protected MvvmViewModel mViewModel;

  protected ActivityMvvmBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatTextView imageCountTextView, AppCompatImageView imageView, Button loadButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imageCountTextView = imageCountTextView;
    this.imageView = imageView;
    this.loadButton = loadButton;
  }

  public abstract void setView(@Nullable MvvmActivity view);

  @Nullable
  public MvvmActivity getView() {
    return mView;
  }

  public abstract void setViewModel(@Nullable MvvmViewModel viewModel);

  @Nullable
  public MvvmViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ActivityMvvmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_mvvm, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMvvmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMvvmBinding>inflateInternal(inflater, R.layout.activity_mvvm, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMvvmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_mvvm, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMvvmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMvvmBinding>inflateInternal(inflater, R.layout.activity_mvvm, null, false, component);
  }

  public static ActivityMvvmBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMvvmBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMvvmBinding)bind(component, view, R.layout.activity_mvvm);
  }
}
